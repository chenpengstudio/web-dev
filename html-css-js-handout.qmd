---
title: "Inside the Emperor's New Clothes"
subtitle: "An Introduction to HTML, CSS and JavaScript"
author: Chen Peng
format: 
  html: default
  pdf: default
editor:
  render-on-save: true
highlight-style: github
from: markdown+emoji
---

# Takeaway

* HTML, CSS and JavaScript are the most popular _languanges_ behind almost every website.
* Web browsers (Chrome, Safari, or Edge) hold the _dictionary_ to understand these languages and put on the nice-looking appearance of websites.
* Under the hood, they are plain texts which you can view & edit with any <b>text editor</b>. 
* For a step-by-stey guide to make your first webpage, see [Get Started](./get-started.html).

# Introducing the Band

In a webpage

* **HTML** (**H**yper**T**ext **M**arkup **L**anguage) lays out its contents and structure (_n._)
* **CSS** (**C**asacading **S**tyle **S**heets) describe the style of its contents (_adj._)
* **JavaScript** further adds interactivity and functionalities (_v._)

You can :eyes: these source code of a web page from your browser.
For example, in Chrome, 

* View entire HTML: **Right click** a white space on the page -> **View Page Source**. 
* Show related code: **Right click** a link or an image on the page -> **Inspect**. 

If the code file looks too complicated and scary, don't panic.
We will start from the basic.

## HTML

```html
<!DOCTYPE html>
<html>
    <head>
        <title>A Webpage</title>
    </head>
    <body>
        <h1>An Interesting Page</h1>
        <p>An exciting paragraph of text.</p>
    </body>
</html>
```

* HTML documents have file extension `.html`

* An HTML document begins with `<!DOCTYPE html>`

* An HTML document consists a series of **elements** with contents enclosed by `<tag></tag>`'s

* At a high level, 
  * `<html> </html>` contains everything of the page
  * `<head> </head>` contains information such as the title and style sheets. These are usually _invisible_.
  * `<body> </body>` contains the contents (text, links, images) we see and interact

* Always[^close-tag] complete an HTML element with an _opening_ tag and a _closing_ tag: `<p> </p>`

[^close-tag]: There are exceptions like `<img>`, `<link>` or `<br>`.

* We will go over some useful HTML tags. For a comprehensive list, check out [W3Schools](https://www.w3schools.com/TAGS/ref_byfunc.asp).
 
## CSS

```css
h1 {color: blue; font-size: 12px;}
```

* CSS files usually have extension `.css`
* A CSS file consists of a list of rules about how to _style_ a HTML document.  

  ![Image source: [W3Schools](https://www.w3schools.com/css/css_syntax.asp)](https://www.w3schools.com/css/img_selector.gif){#fig-css-rule fig-align="center"}
  
* A selector looks for tags in the HTML to apply the CSS rules
* Enclose declarations by curly brackets `{ }` and separate them by semicolons `;`
* In an HTML document, you can place CSS inside `<head> </head>`:
  
  ```html
  <head>
    <link rel="stylesheet" href="styles.css">
  </head>
  ```

## JavaScript

```html
<button onclick="document.getElementById('face').src='./images/face-laugh.svg'">Make me laugh!</button>
<img id="face" src="./images/face-smile.svg" style="width:100px;display:block;margin-left:auto;margin-right:auto">
<button onclick="document.getElementById('face').src='./images/face-smile.svg'">That's enough...</button>
```

<button onclick="document.getElementById('face').src='./images/face-laugh.svg'">Make me laugh!</button>
<img id="face" src="./images/face-smile.svg" style="width:100px;display:block;margin-left:auto;margin-right:auto">
<button onclick="document.getElementById('face').src='./images/face-smile.svg'">That's enough...</button>

* It is a programing language. I will not cover JavaScript in this class.
* Learn some [JavaScript basics](https://www.geeksforgeeks.org/javascript-cheat-sheet-a-basic-guide-to-javascript/) on Geeks for Geeks
* Check out [JavaScript tutorial](https://www.w3schools.com/js/default.asp) on W3Schools

# HTML Tags

| Tag        |    Meaning/Usage |
|:----------:|:----------:|
| `<h1>Chapter 1</h1>` | first-level heading |
| `<h2>Section 1</h2>` | second-level heading |
| `<p>paragraph</p>` | start a paragraph |
| `<b>bold text</b>` | <b>bold text</b> |
| `<i>italic text</i>` | <i>italic text</i> |
| `<span style="color:#5a5ad0;font-size:larger;">text</span>` | to style a part of a <span style="color:#5a5ad0;font-size:larger;">text</span>|
| `<a href="https://www.google.com">Google</a>` | a link to <a href = "https://www.google.com">Google</a> |
| `<img src="https://www.w3schools.com/images/lamp.jpg" alt="Lamp" width="32" height="32">` | <img src="https://www.w3schools.com/images/lamp.jpg" alt="Lamp" width="32" height="32"> | 
| `<br>` | line break | 

: Body tags 

| Tag        |    Meaning/Usage |
|:----------:|:----------:|
| `<title>A Meaningful Title</title>` | the title of a docuemnt| 
| `<link rel="stylesheet" href="styles.css">` | include style sheet `style.css`| 

: Head tags 

# CSS Selector

| Selector        |    Meaning |
|:----------:|:----------:|
| `p {}` | all `<p>` elements | 
| `h1 {}` | all `<h1>` elements | 
| `.fancy {}` | elements of `class="fancy"`| 

# CSS Property and Value

| Selector        |    Meaning |
|:----------:|:----------:|
| `color: red` |  <span style="color: red">text color</span> | 
| `background-color: cyan` |  <span style="background-color: cyan">background color</span> | 
| `font-size: 1.5em` |  <span style="font-size: 1.5em">font size</span> | 
| `font-family: Courier` |  <span style="font-family: Courier">font family</span> | 

# Publish Your Webpage (GitHub)

**NOTE**: The following steps are not the good practice to use GitHub. If you want to learn more, check out the [GitHub documentation](https://docs.github.com/en/get-started/quickstart/hello-world).

1. Create a free GitHub account on <https://www.github.com>
2. Sign in to GitHub, and create a **repository** (repo; a project folder) by clicking "**+**" at the top-left corner. Don't change any default settings.
3. On the Quick Setup page after creating the repository, click the link [**uploading an existing file**]{style="color:blue"}
4. Upload files of your webpage (`.html`, `.css`, and images).
5. Click [**Commit Changes**]{style="background-color:#22aa22;color:white"}. Your new repo has some files now.
6. Click **Setting** in the navigation bar under your repo name
   ![](./images/repo-settings.png)
7. Click **Pages** on the left in the **Code and automation** section
   ![](./images/repo-settings-pages.png)
8. On the right, you will see **GitHub Page**, make sure **Souce** is **Deploy from a branch**   
9. Under the **Branch** subsection, click the drop-down (shown as **None** above), and select **main** and **/ (root)**, respectively. **Save**!
   ![](./images/gh-page.png)
10. Open a new browser window/tab, type in the web URL of your published page:
   `https://www.<YOUR GITHUB USER NAME>.github.io/<YOUR REPO NAME>/<YOUR HTML FILE NAME>`